apiVersion: v1
kind: Secret
metadata:
  name: cluster-cleanup-secret
  namespace: kube-system
type: Opaque
stringData:
  cleanup.bash: |-
  #!/bin/bash
  POD_STATUS_MOD=$(echo $1 | sed 's/,/\\\|/g')
  PROTECTED_NAMESPACES_MOD=$(echo $3 | sed 's/,/ /g')

  echo start to clean up the cluster..
  arr=()
  while read -r line ; do
      # extract the namespace name of a pod
      namespace_name=$(echo "$line" | awk '{print $1}')
      # extract the creation date of a pod
      date_created=$(echo ${line##* } | awk 'match($1,/[0-9]+d/) {print $0}' | sed 's@\([0-9]\+\).*@\1@')
      # filter the unique namespaces that match the criteria 
      if [[ ! " ${arr[*]} " =~ " ${namespace_name} " ]] && [[ $date_created -gt $2 ]] && [[ "$namespace_name" != "kube-system" ]]; then
          arr+=($namespace_name)
      fi
  done <<< "$(kubectl get pods --sort-by=.metadata.creationTimestamp -A | grep -e $POD_STATUS_MOD)"

  protected_namespaces=($PROTECTED_NAMESPACES_MOD)

  echo "${#arr[@]} namespace(s) match the criteria to be deleted, ${#protected_namespaces[@]} namespace(s) are protected"

  for namespace in "${arr[@]}"
  do  
      # exclude protected namespaces
      if [[ " ${protected_namespaces[*]} " =~ " $namespace " ]]
      then
          echo Namespace $namespace skipped to be deleted
      continue 
      fi
      echo Deleting namespace $namespace..
      # uninstall all helm releases in a namespace, could not install helm on alpine images   
      # helm ls --all --short -n $namespace | xargs -L1 helm uninstall -n $namespace
      # delete all resources
      kubectl delete all --all -n $namespace
      # delete namespace
      kubectl delete ns $namespace
  done
